print "one";
print true;
print 2 + 1; // "3"

var a = 1;
var b = 2;
print a + b; // "3"

var a = 1;
print a = 2; // "2".

print "
scopes:";
var a = "global a";
var b = "global b";
var c = "global c";
{
  var a = "outer a";
  var b = "outer b";
  {
    var a = "inner a";
    print a;
    print b;
    print c;
  }
  print a;
  print b;
  print c;
}
print a;
print b;
print c;

/* should cause error because we are preventing access to outer variable if we are reassigning it in local scope
print "
overlap:";
var a = 1;
{
  var a = a + 2;
  print a;
}
*/

print "\nternary associativity test should return train";
var arg = "T";
var vehicle = ( ( arg == "B" ) ? "bus" :
             ( arg == "A" ) ? "airplane" :
             ( arg == "T" ) ? "train" :
             ( arg == "C" ) ? "car" :
             ( arg == "H" ) ? "horse" :
                              "feet" );
print vehicle;

print "\nternary evaluation test (expected 1)";
var i = 0;
var j = i == 0 ? ++i : ++i;
print i;

print "\nbasic comma test returns 4 (last value)";
var i = (1,2,4);
print i;

print "\nvar comma test (assigns all values and uses last val 2)";
var a=1, b=2, c=3;
var i = (a, b);
print i;

print "\nprints the last value (6)";
print a = 4, b = 5, c = 6;

/* should fail all variables should have assignment
var a = 4, b, c=5;
print b;
*/

print "\nassignment comma precedence (result 3):";
var a=1, b=2, c=3;
var i;
i = a = a + 2, a + b;
print i;

print "\ncomma evaluates all values (1, 1): ";
var d = 0, f = 0;
d++, f++;
print d;
print f;

print "\nfor loop complex (to ten - zero and one based):";
for(var i = 0, j = 1; i < 10; i++, j++) {
    print j;
}

print "\nFibonacci (first 21):";
var a = 0;
var b = 1;

while (a < 10000) {
  print a;
  var temp = a;
  a = b;
  b = temp + b;
}